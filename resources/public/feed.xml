<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0' xmlns:atom='http://www.w3.org/2005/Atom'>
<channel>
<atom:link href='http://micahelliott.com/' rel='self' type='application/rss+xml'/>
<generator>
clj-rss
</generator>
<title>
Micah Elliott
</title>
<link>
http://micahelliott.com/
</link>
<description>
A Tech Journal
</description>
<lastBuildDate>
Thu, 09 Jul 2015 19:11:38 -0700
</lastBuildDate>
<item>
<guid>
http://micahelliott.com/posts/2015-08-08-gpg-howto.html
</guid>
<link>
http://micahelliott.com/posts/2015-08-08-gpg-howto.html
</link>
<title>
GPG Howto
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Audience:&lt;/strong&gt; &lt;em&gt;anyone&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Keywords:&lt;/strong&gt; &lt;em&gt;gpg security privacy encryption&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;❧❧❧&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At one point I thought changing my name might help with privacy, but that was
before the Internet. &lt;em&gt;— Olivia Wilde&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Have you ever told a secret to a friend? Made a transaction at your bank?
Wrote an entry in your diary? Invented a secret handshake? Been to the doctor?
Got a &quot;steal&quot; sign from your baseball coach? All of these should
be private&amp;#8201;&amp;#8212;&amp;#8201;between you and the person or thing you&amp;#8217;re communicating with.
There are two main technical standards for privacy: TLS/SSL and OpenPGP.
TLS/SSL are what&amp;#8217;s used to secure the forms you fill out on web pages, and
handle secure &quot;connections&quot;. In this episode we&amp;#8217;ll learn all about OpenPGP,
AKA Pretty Good Privacy. This is what&amp;#8217;s used to encrypt, sign, and verify
(prove who the person is) any message or file you write or read. It uses a
pair of &quot;keys&quot; to do these jobs.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;GPG is the tool we&amp;#8217;ll focus on that implements the OpenPGP standard. It&amp;#8217;s been
around for 20+ years and is &lt;em&gt;the&lt;/em&gt; industry standard for encrypting, signing,
and verifying the contents and senders of messages and files. It&amp;#8217;s also pretty
fun to use.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The users of OpenPGP form a club of folks who want to build a &quot;Web Of Trust&quot;
(WOT). Anyone can get in; all you need is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;A little knowledge of the &lt;code&gt;gpg&lt;/code&gt; tool (which you&amp;#8217;ll get here)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some official identification for yourself&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A willingness to meet people to verify their identity and sign their keys&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;(I hope you&amp;#8217;re already using Zsh. If not, see previous episodes to get up to
speed.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Zsh has great command completion for &lt;code&gt;gpg&lt;/code&gt;. Make sure you&amp;#8217;re &lt;code&gt;tab&lt;/code&gt;-ing all the
time to auto-complete options and arguments.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_is_it_worth_the_effort_trouble&quot;&gt;Is it worth the effort/trouble?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In order to join certain mailing lists and development groups (fedora), the
first thing you may be asked for is your GPG public key.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Some people you work with are going to require that your emails to them be
signed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you develop and distribute a software package, many of your users may
expect to be able to download your public key in order to verify that the
software comes from you. (&lt;code&gt;pacman -Qi coreutils&lt;/code&gt;).
(&lt;a href=&quot;https://wiki.archlinux.org/index.php/pacman-key&quot; class=&quot;bare&quot;&gt;https://wiki.archlinux.org/index.php/pacman-key&lt;/a&gt;) Though it&amp;#8217;s more typically
just a hash (MD5/SHA1).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_go_get_some_official_identification&quot;&gt;Go get some official identification&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To make any of this OpenPGP stuff legit, you&amp;#8217;re going to need some real ID.
Many kids don&amp;#8217;t have ready access to a common ID card. But they should.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You absolutely need some sort of official ID. This could be a driver&amp;#8217;s
licence, identification card (get this from your local DMV; no age
requirement), school student-body card, birth certificate/card, social
security card.
([ID cards in California](&lt;a href=&quot;http://www.dmv.ca.gov/dl/dl_info.htm#idcard)&quot; class=&quot;bare&quot;&gt;http://www.dmv.ca.gov/dl/dl_info.htm#idcard)&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you don&amp;#8217;t think you have a need for a passport, just pick up a state ID
card from your DMV. It&amp;#8217;s easy and cheap. Too many kids don&amp;#8217;t have ID
that they can readily show. So go get one.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_commands_not_options&quot;&gt;Commands (not options)&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;GPG has several &lt;strong&gt;commands&lt;/strong&gt;. They come near the end of the invocation. The ones
we&amp;#8217;ll care about are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;--gen-key
--gen-revoke
--list-keys    -k
--verify
--encrypt      -e
--decrypt      -d
--sign         -s
--cl(earsign)
--fin(gerprint)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Some later uses:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;--fingerprint
--recv-keys
--send-keys
--edit-key&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Options&lt;/strong&gt; alter the way commands behave. Most of the options we can set
permanently in our config file. We&amp;#8217;ll get to that later. But here are some
important ones:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;--armor
--recipient   -r&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_creating_your_own_key&quot;&gt;Creating your own key&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When creating your keys, you&amp;#8217;ll want to ensure that your name is identical to
what&amp;#8217;s on your ID cards. If you use your middle name or initial on them, type
it exactly as it shows on them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;% gpg --gen-key
&amp;gt; 1
&amp;gt; 4096
&amp;gt; 1y
&amp;gt; Your Full Real Name
&amp;gt; you@yourmail.com
&amp;gt; student and hacker
&amp;gt; confirm&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now you need to generate some entropy! Moving your mouse around as instructed
might not be enough. Here&amp;#8217;s something to run which will speed things up.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;% haveged -n 0 | dieharder -g 200 -a&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Take a look at your new key!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;gpg --list-keys&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;gpg --list-keys you«tab»&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_revocation_key&quot;&gt;Revocation key&lt;/h3&gt;

&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_adding_a_picture&quot;&gt;Adding a picture&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Your pic should be a JPEG of dimensions 240 wide by 288 tall. Aim for 4 KB in
size. If you don&amp;#8217;t have a good headshot, use your webcam with a solid
background. Capture part of your shoulderblades, and all of your head. Crop it
down, and export to a fairly low resolution/quality. I like &lt;code&gt;gimp&lt;/code&gt; for this.
Tune the size until you get down to ~4KB. (show vid of how to do this)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now let&amp;#8217;s add it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;gpg --edit-key &amp;lt;your-key-ID&amp;gt; addphoto
&amp;gt; /full/path/to/you.jpg
&amp;gt; save&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;GnuPG will then ask you for the filename of your JPEG image. Specify the
complete path.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_configuration&quot;&gt;Configuration&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There&amp;#8217;s a file in your &lt;code&gt;~/.gnupg&lt;/code&gt; directory called &lt;code&gt;gpg.conf&lt;/code&gt;. This contains
several settings that affect the way &lt;code&gt;gpg&lt;/code&gt; behaves. Here are the settings
you&amp;#8217;ll want to enable:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;% vim ~/.gnupg/gpg.conf
---
keyserver hkp://keys.gnupg.net
no-greeting
keyserver-options auto-key-retrieve
armor
list-options show-photos
photo-viewer &quot;feh --title 'GPG: KeyID 0x%k' %i&quot;
keyid-format long&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_upload_your_key_to_a_key_server&quot;&gt;Upload your key to a key server&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Upload your key after once you&amp;#8217;re absolutely certain you&amp;#8217;ve done this as
described. Once a key gets posted, the only way to remove it is with a
revocation key.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_getting_others_keys&quot;&gt;Getting others' keys&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;gpg --recv-keys&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;gpg --import&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Get a [well trusted GPG guru&amp;#8217;s key](&lt;a href=&quot;http://pgp.mit.edu/pks/lookup?op=vindex&amp;amp;search=0x9CDD9A214EBA9723&quot; class=&quot;bare&quot;&gt;http://pgp.mit.edu/pks/lookup?op=vindex&amp;amp;search=0x9CDD9A214EBA9723&lt;/a&gt;). Take a look at that page and note that his &lt;em&gt;keyID&lt;/em&gt; is &lt;code&gt;4EBA9723&lt;/code&gt;. Grab it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;gpg --recv-keys 4EBA9723&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now let&amp;#8217;s search for someone else&amp;#8217;s key. Visit
[the GPG search tool](&lt;a href=&quot;http://pgp.mit.edu/&quot; class=&quot;bare&quot;&gt;http://pgp.mit.edu/&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Actually, we can do it from the command line:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;gpg --sea(rch-keys)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Search for &quot;Richard Stallman&quot;. Notice that there are several of them. How do
you know which to trust? Head over to his site and note his message:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;&quot;to be really sure which key is mine, you need to get my key fingerprint
from me or follow a chain of signatures.&quot;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here&amp;#8217;s a security legend: Bruce Schneier&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Some people post their pubkeys on their websites. Here are a couple examples:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Bruce Schneier: &lt;a href=&quot;https://www.schneier.com/contact.html&quot; class=&quot;bare&quot;&gt;https://www.schneier.com/contact.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Postmodern: &lt;a href=&quot;http://postmodern.github.io/contact.html&quot; class=&quot;bare&quot;&gt;http://postmodern.github.io/contact.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_how_to_make_sense_of_gpg_output&quot;&gt;How to make sense of gpg output&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Bruce Schneier no longer keeps his current valid key on a key server. You have
to go to his site to download it. Actually, select and copy it from that page
and paste it into &lt;code&gt;pubkey.schneier.com.asc&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now let&amp;#8217;s import it. This is essentially the same thing as a &lt;code&gt;--recv-keys&lt;/code&gt; does.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;gpg --import pubkey.schneier.com.asc&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s look at Bruce Schneier&amp;#8217;s GPG info:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;9A98966F&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Notice that both of these luminaries are now using 4096-bit keys. That&amp;#8217;s why
we bumped ours up, too.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_testing_dummy_keys&quot;&gt;Testing dummy keys&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Generate a new user on your system, or partner up with a friend.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_exchanging_keys_with_people_you_meet&quot;&gt;Exchanging keys with people you meet&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You should only sign keys for persons you meet face-to-face. The goal is to
verify their &lt;em&gt;identity&lt;/em&gt;, not how good of a person she is. Here&amp;#8217;s what you
need from them.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_inspecting_someone_s_key&quot;&gt;Inspecting someone&amp;#8217;s key&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Check their fingerprint&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;View their picture.
    gpg --list-keys --list-options show-photo mde&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_key_signing_parties&quot;&gt;Key-signing parties&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_other_tools&quot;&gt;Other tools&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Entropy generation (haveged, dieharder):
    haveged -n 0 | dieharder -g 200 -a&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Seahorse key manager GUI&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_other_cool_uses_for_gpg&quot;&gt;Other cool uses for GPG&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;bitcoin privacy&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_terminology&quot;&gt;Terminology&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Web Of Trust (WOT)&amp;#8201;&amp;#8212;&amp;#8201;a network of folks who have signed each others' keys&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;subkey&amp;#8201;&amp;#8212;&amp;#8201;same as a pubkey (public key); pub and priv are each &quot;sub&quot;-keys
since it takes them both together to make the &quot;full&quot; key.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;key server&amp;#8201;&amp;#8212;&amp;#8201;keys.gnupg.net, pgp.mit.edu&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PKI&amp;#8201;&amp;#8212;&amp;#8201;Public Key Infrastructure (the systems, people, and keys that service the WOT)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;gpg&lt;/code&gt;&amp;#8201;&amp;#8212;&amp;#8201;CLI interface with a lot of options&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.asc&lt;/code&gt;&amp;#8201;&amp;#8212;&amp;#8201;a plain ASCII file encoding; basically plain readable (not binary) text&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.sig&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fingerprint&amp;#8201;&amp;#8212;&amp;#8201;a long hex string identifying they person/key; view with:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;keyID&amp;#8201;&amp;#8212;&amp;#8201;a short version of the fingerprint; these are shown everywhere! eg, &lt;code&gt;299C28F0&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;signature&amp;#8201;&amp;#8212;&amp;#8201;the signings of a given key, the more the better&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;signing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hkp&amp;#8201;&amp;#8212;&amp;#8201;Horowitz Key Protocol, eg: hkp://pgp.mit.edu&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;certificate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;non-repudiation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;rsa&amp;#8201;&amp;#8212;&amp;#8201;the only algorithm you&amp;#8217;ll want to use&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;base64&amp;#8201;&amp;#8212;&amp;#8201;the encoding of ascii you can read&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Sat, 08 Aug 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-20-stackoverflow-motivation-engine.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-20-stackoverflow-motivation-engine.html
</link>
<title>
Stack Overflow’s Motivation Engine
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Audience:&lt;/strong&gt; &lt;em&gt;programmers&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You’ve spent plenty of time on Stack Overflow. Google loves it. Several visits
per day? But unless you’re one who answers questions there, you’re probably not
aware of how they get so much participation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I’ve recently been answering questions on Stack Overflow. Well, I &lt;em&gt;had to&lt;/em&gt; in
order to be able to do things like upvoting. Aren’t we obligated to upvote when
someone has taken the time to teach us something valuable? And that was the
first hook. But it turns out that SO has a very sophisticated set of motivators
to keep you participating &amp;#8230;&amp;#8203; &lt;em&gt;frequently&lt;/em&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What first puzzled me was how so many other users there had such high
reputation. You might think that 1,000 points came from answering 1,000
questions. But it’s an elaborate point system. You feel yourself growing points
at a fairly rapid clip. It would sure be nice to have a &lt;em&gt;k&lt;/em&gt; (thousand) next to
your name!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_get_busy&quot;&gt;Get Busy!&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You eventually realize that you’re never going to be the first to answer a
question unless you’re tuned into a near real-time picture of what’s happening
with your tags of interest. The best way to earn points is to be the first to
answer and get your answer accepted. So you subscribe to be updated via email.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Every site requires another set of reputation. You’ll quickly find yourself
trying to answer questions on other Stack Exchange sites.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_way_more_than_badges&quot;&gt;Way More than Badges&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Sure, you earn badges. But you have to do more and more to earn the next type of
badge. You even have your “next badge” dangled from your profile. The badges
are more like &lt;em&gt;abilities&lt;/em&gt;. And there are three categories of them: bronze,
silver, and gold. It’s pretty challenging to get even a silver.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Each badge is documented. You know what you have to do to earn the
&lt;em&gt;archaeologist&lt;/em&gt; badge: edit some old posts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You’re given a pleasant surprise when they tell you that they’ve removed ads
since you’re such a great participant.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ultimately, people are on SO to prove their worth and get hired. So the&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_not_social&quot;&gt;Not Social&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It’s pretty interesting that there is no notion of “following”. You can’t even
“message” someone.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_gaming_it&quot;&gt;Gaming It&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I’m not going to bother trying to game this, because I don’t (think) I care too
much about my reputation points. But it can be done. I see people asking
questions that they shortly thereafter answer themselves.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I suppose you could also create a dummy account that spends a lot of its time
upvoting your real posts.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Mon, 20 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-17-why-centos.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-17-why-centos.html
</link>
<title>
CentOS vs the Rest
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I’ve been hooked on CentOS for servers for a couple years now. We used to use
Ubuntu, but I see several advantages to choosing CentOS over Ubuntu and others.
Here’s why:&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;CentOS (and Fedora) have had Systemd in production releases for over a year.&lt;/strong&gt;
This is probably the biggest reason. Ubuntu is getting it eventually, but CentOS
has had it and it’s working well. You’ll have to adopt it with Linux anyway, so
why not now?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;CentOS is a first-class member of a strong Red Hat family.&lt;/strong&gt; They were
recently acquired by Red Hat and now benefit from lots of company resources.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Vendors will install CentOS for you.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;More hardware is certified for Red Hat.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;CentOS releases are good for 10 years.&lt;/strong&gt; If you were totally stuck with not being
able to upgrade a system, this makes for a pretty good life span. Ubuntu LTSs
are &lt;em&gt;only&lt;/em&gt; 5 years. :) So, minor win.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Fedora is a well-tested cutting edge distro and CentOS get the best of its
learnings.&lt;/strong&gt; It’s solid as a desktop, so you can use it for development and have
a pretty consistent environment across your desk and servers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Red Hat/CentOS have a well-defined focus.&lt;/strong&gt; They embrace the fact that they
are a server OS. Compare this to Ubuntu’s focus on touch interfaces, display
managers, phones.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;There are certifications for becoming a (so-called) Red Hat expert.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;There is an upgrade path to RHEL if someone insists upon it.&lt;/strong&gt; Some PHBs will
want to know that they can throw money around to buy “guarantees” about
stability/support.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;CentOS is ubiquitous.&lt;/strong&gt; Most cloud VPSs will offer it as an option.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Docker is in production.&lt;/strong&gt; I don’t think Docker is a panacea, but it’s good to
see it’s being well tested in RHEL and CentOS.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Firewalld is new and in.&lt;/strong&gt; It’s not terribly well documented, but it’s really
just a front end to iptables.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;EPEL provides many extra packages.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_shortcomings&quot;&gt;Shortcomings&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Not everything is perfect with CentOS, though. It does not always have the
newest versions of packages you might desire. I end up building my own versions
of Nginx, Redis, Ruby, and others.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The security update story is also a bit lacking. The simplest way I have found
to stay up-to-date on vulnerability patching is to watch the daily mail list,
and simply update every server late on Saturday nights. No, it’s not my idea of
a good time.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Yum is the package manager and it is in flux, and essentially
&lt;a href=&quot;http://dnf.baseurl.org/2015/05/11/yum-is-dead-long-live-dnf/&quot;&gt;pronounced dead&lt;/a&gt;.
Fortunately, it appears to have some backward compatibility with yum and should
provide a clean transition.&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you’re looking for a broader spectrum of OSs to choose from, particularly for
your desktop, read my article
on &lt;a href=&quot;/posts/2015-01-10-choosing-an-os.html&quot;&gt;choosing an OS&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Fri, 17 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-13-clojure-vim-setup.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-13-clojure-vim-setup.html
</link>
<title>
Clojure with Vim Setup
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;These are the steps I take to set up a new Arch system with a Clojure
environment for vim.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Get lein up to date&lt;/p&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;lein update&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install new version of clojure, eg, Arch: &lt;code&gt;yaourt -S clojure&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update lein search index: &lt;code&gt;lein search whatever&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set up fireplace, highlighting, mappings, sexp into &lt;code&gt;.vimrc&lt;/code&gt; with Vundle:&lt;/p&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;Bundle 'guns/vim-clojure-static.git'
Bundle 'guns/vim-clojure-highlight.git'
Bundle 'tpope/vim-leiningen.git'
Bundle 'tpope/vim-projectionist.git'
Bundle 'tpope/vim-dispatch.git'
Bundle 'tpope/vim-fireplace.git'
Bundle 'tpope/vim-sexp-mappings-for-regular-people'
Bundle 'guns/vim-sexp'
Bundle 'dgrnbrg/redl'&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add to &lt;code&gt;~/.lein/profiles.clj&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;{:user {:plugins [[lein-pprint &quot;1.1.1&quot;]
                  [cider/cider-nrepl &quot;0.7.0&quot;]]
        :dependencies [[slamhound &quot;1.3.1&quot;]
                       [org.thnetos/cd-client &quot;0.3.6&quot;]]}}&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create new project:&lt;/p&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;lein new foo&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add to each project:&lt;/p&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;:main foo.core
:repl-options {:init-ns foo.core})&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;lein deps&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start tmux? Maybe not; slime not working now anyway&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start &lt;code&gt;lein repl&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fire up vim&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run a repl in vim: &lt;code&gt;:Console&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start &lt;a href=&quot;https://github.com/dgrnbrg/vim-redl&quot;&gt;redl&lt;/a&gt; with &lt;code&gt;:ReplHere&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start drip (optional)&lt;/p&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;export LEIN_JAVA_CMD=drip  # could make lein hang on app template&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
<pubDate>
Mon, 13 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-09-awesome-awk.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-09-awesome-awk.html
</link>
<title>
Awesome Awk
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Audience:&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This should be a video.&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>
Thu, 09 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-09-i3-nuc-office-dashboard.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-09-i3-nuc-office-dashboard.html
</link>
<title>
Live Office Dashboard with i3 and a NUC
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this post I&amp;#8217;ll show you how to set up a live dashboard to display your
company (or house) metrics. It&amp;#8217;s as simple as writing a little i3 script to
rotate through a set of open browsers. You&amp;#8217;ll need to run X, i3, a fast
browser. The required hardware is a TV and a NUC.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
</description>
<pubDate>
Thu, 09 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-08-the-gift-of-gifs.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-08-the-gift-of-gifs.html
</link>
<title>
Give the Gift of GIFs
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Audience:&lt;/strong&gt; &lt;em&gt;programmers&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Animated GIFs can be really helpful for demonstrating in a small area how
something actually works. Where books may require pages of explaining, you can
fit a whole lot of action into a 300x80px GIF.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This post should be sprinkled with GIFS. But it’s not, sorry. This is kind of
meta, so I’ll put most of it into a video.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_shortcomings&quot;&gt;Shortcomings&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;no audio&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;repeat is annoying&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;when many sprinkled around can bog down a page and also cause distraction&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;file sizes get big unless short and small&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_alternatives&quot;&gt;Alternatives&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;capture a real video&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ascii.io&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;asiinema&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;script&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Wed, 08 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-07-handy-zsh-tabbing.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-07-handy-zsh-tabbing.html
</link>
<title>
Zsh Tab Completion Demo
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here is a sampling of animated GIFs showing off some Zsh completion features.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can tab your way around to go from functions and aliases to full paths.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;../img/zsh-tabbing-1.gif&quot; alt=&quot;zsh tabbing 1&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Backtick expansion in double-quotes&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;../img/zsh-tabbing-2.gif&quot; alt=&quot;zsh tabbing 2&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 2. Backtick expansion in double-quotes&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Tue, 07 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-07-gists-as-blog.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-07-gists-as-blog.html
</link>
<title>
Using Gist As Your Blog
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Github&amp;#8217;s Gist is almost good enough as a blog. If you don&amp;#8217;t want to take the
time to set up your own blog, you could probably get away with using gists. As
an example, &lt;a href=&quot;https://gist.github.com/MicahElliott&quot;&gt;this&lt;/a&gt; is a pretty decent index
display.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;


&lt;!-- &lt;iframe src=&quot;https://player.vimeo.com/video/82339989&quot; width=&quot;500&quot; height=&quot;529&quot; frameborder=&quot;0&quot; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; --&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_where_it_shines&quot;&gt;Where it shines&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;nice comment system (&lt;a href=&quot;https://gist.github.com/MicahElliott/3048622&quot;&gt;example&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;markdown support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;auto-abstracts (shortened posts in index)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;built-in editor or use git&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;store associated files with your article in a real git repo&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nothing to host yourself&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_where_it_falls_short&quot;&gt;Where it falls short&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;no global feed&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;people don&amp;#8217;t expect it to serve as your blog&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;gets cluttered with other snippets&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;google will not index these well&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;no analytics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it seems unlikely that someone will like your post and decide to go explore your other gists&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Gists are great. Even if you set up a real blog, you&amp;#8217;ll still want to use gists to host code samples.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Tue, 07 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-05-docker-systemd-ansible.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-05-docker-systemd-ansible.html
</link>
<title>
Docker as a Full CentOS
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Docker has arrived. It&amp;#8217;s a &quot;container&quot; system for isolating services. It&amp;#8217;s
simpler and lighter than a VM, yet easier to use than a jail. But it&amp;#8217;s not
quite a full OS: it usually lacks things like systemd, cron, sshd, syslog, etc.
&lt;a href=&quot;http://phusion.github.io/baseimage-docker/&quot;&gt;Some folks are trying to address this for Ubuntu&lt;/a&gt;.
It turns out that this can also be done with CentOS 7! This all-in-one docker
instance becomes a great vehicle for testing deploys (and probably much more).&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ubuntu wasn&amp;#8217;t going to work for my needs, but I found
&lt;a href=&quot;https://github.com/maci0/docker-systemd-unpriv&quot;&gt;a minimal CentOS 7&lt;/a&gt;
version of the Ubuntu approach. So now Docker can actually be used for testing
deployments with almost real full OSs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_docker_with_centos_7&quot;&gt;Docker With CentOS 7&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;On your local host, stop docker if running (to reset IPs) and start up the
docker service:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;systemctl stop docker.service
systemctl start docker.service&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Maci has provided
&lt;a href=&quot;http://maci0.wordpress.com/2014/07/23/run-systemd-in-an-unprivileged-docker-container/&quot;&gt;an article&lt;/a&gt;
and repo to get centos7 working with docker, which this article extends.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Get it (one time ever):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;git clone https://github.com/maci0/docker-systemd-unpriv
cd docker-systemd-unpriv&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Build (one time ever):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;alias dk=docker  # put in ~/.zshrc
dk build --rm -t maci/systemd .&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Fire up an instance any time, setting hostname etc:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;dk run -h dk2 --rm -t -i -p 2222:22 -v /sys/fs/cgroup:/sys/fs/cgroup:ro maci/systemd /usr/lib/systemd/systemd&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Switch to other term.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;See the IP:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;dk ps
dk inspect 097241cd8024 |grep IPAddress&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Test login:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;sshpass -p root ssh dk2
# Oops. Wipe existing/offending key.
sed -i '47d' ~/.ssh/known_hosts
sshpass -p root ssh dk2&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Run ansible toward it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;ansible-playbook -u root -l offsvrs:172.17.0.2 -k site.yml -v&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Watch progress:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;journalctl -xaf&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Shut down instance:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;dk ps
...
dk stop ea970de7e735&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Save the image:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;dk save -o centos7-systemd-maci.img.tar maci/systemd:latest
gzip centos7-systemd-maci.img.tar&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Archive it to S3:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;s3.sh put centos7-systemd-maci.img.tar.gz s3://dockers.example.com&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_helpers&quot;&gt;Helpers&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Generate hashed password:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;python2 -c &quot;from passlib.hash import sha512_crypt; import getpass; print sha512_crypt.encrypt(getpass.getpass())&quot;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Script to quickly remove a key, &lt;code&gt;~/bin/sshrmkey&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;#! /usr/bin/env zsh
# sshrmkey — delete a line containing stale/offending key
line=${1?Must provide offending line}
sed -i &quot;${line}d&quot; ~/.ssh/known_hosts&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;% sshrmkey 42&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_vagrant_virtualbox&quot;&gt;Vagrant/Virtualbox&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you really want to avoid Docker but still test your deploy on CentOS 7, you
can accomplish much of the same setup with Vagrant.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Install:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;y -S vagrant&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Set up kernel: &lt;a href=&quot;http://unix.stackexchange.com/questions/131792/&quot; class=&quot;bare&quot;&gt;http://unix.stackexchange.com/questions/131792/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;sudo depmod [3.19.2-1-ARCH]
sudo modprobe vboxdrv&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Choose work area:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;md ~/exp/vagrant/t1&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Find a box: &lt;a href=&quot;http://www.vagrantbox.es/&quot; class=&quot;bare&quot;&gt;http://www.vagrantbox.es/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;vagrant init hashicorp/precise32 # OR
vagrant init https://f0fff3908f081cb6461b407be80daf97f07ac418.googledrive.com/host/0BwtuV7VyVTSkUG1PM3pCeDJ4dVE/centos7.box
[vagrant up]??&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Log in:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;vagrant ssh&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Better:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;sshpass -p vagrant ssh -p 2200 vagrant@127.0.0.1&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Consult: &lt;a href=&quot;http://docs.ansible.com/guide_vagrant.html&quot; class=&quot;bare&quot;&gt;http://docs.ansible.com/guide_vagrant.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Add to generated &lt;code&gt;Vagrantfile&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;config.vm.provision &quot;ansible&quot; do |ans|
  ans.playbook = &quot;playbook.yaml&quot;
end&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Start it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;vagrant up&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Create hosts file:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;&amp;gt;hosts
[foos]
127.0.0.1:2200&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Create a playbook.yaml:&lt;/p&gt;
&lt;/div&gt;
- hosts: foos
  tasks:
    - name: install zsh
      yum: name=zsh state=present
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Run ansible:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;ansible-playbook -i ./hosts -u vagrant playbook.yml -ksK&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Sun, 05 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-05-interesting-major-vulnerabilities.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-05-interesting-major-vulnerabilities.html
</link>
<title>
Interesting Modern Vulnerabilities
</title>
<description>
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_heartbleed&quot;&gt;Heartbleed&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_ghost&quot;&gt;GHOST&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_poodle&quot;&gt;POODLE&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_shellshock&quot;&gt;ShellShock&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Sun, 05 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-05-networking-tools.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-05-networking-tools.html
</link>
<title>
Networking Tools
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ansible snippets to install these.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;code&gt;iperf3&lt;/code&gt; is a great tool for testing transfer speed. With its help, I was able to convince a network engineer at our data center that there was an issue. She eventually got our rate up to nearly 1 Gbps across remote centers.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;admonitionblock tip&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Tip&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
use iperf.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Some Tools&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;# a comment
iperf3&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;    netstat -tulpn

netcat

sudo traceroute

mtr

nethogs

iftop

nmon&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Sun, 05 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-02-stop-using-markdown.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-02-stop-using-markdown.html
</link>
<title>
From Markdown to Asciidoc
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Markdown has become the de facto standard for plain text syntax. It&amp;#8217;s supported
in the webform editors of Stack Overflow, Github, and many blogs, wikis, and
forums. It’s built into most static site generators. You can even use it to
write a book. It&amp;#8217;s fantastic that it has raised awareness of text-based markup,
but it’s not enough.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoc fills in many of the shortcomings of Markdown. Here&amp;#8217;s a
&lt;a href=&quot;http://powerman.name/doc/asciidoc&quot;&gt;cheat-sheet&lt;/a&gt; to give you a feel for its
syntax. It&amp;#8217;s almost as simple as Markdown, and thus quick to learn.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_markdown_shortcomings&quot;&gt;Markdown Shortcomings&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You’re probably aware of most of these, but maybe don’t notice the pain as much
as you should.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Comments are clumsy. And multi-line becomes a mess.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Vim ends up loading its HTML syntax which clutters functionality and causes confusion.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;No good way to add extra markup without dropping into HTML.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;No tables, citations, footnotes, or sub-/super-scripting.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Inferior to Asciidoc&amp;#8217;s Docbook toolchain.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_asciidoc_extras_and_general_niceties&quot;&gt;Asciidoc Extras and General Niceties&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Consistency of section delimiters. All are four characters and delineate blocks:
line-wise pairs of quadruples &lt;code&gt;-&lt;/code&gt; (code), &lt;code&gt;_&lt;/code&gt; (quote), &lt;code&gt;/&lt;/code&gt; (comment), &lt;code&gt;=&lt;/code&gt;
(caption), &lt;code&gt;+&lt;/code&gt; (pass-through HTML).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Titles can be added to most sections.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Auto-up-converting of some punctuation, like the pedant&amp;#8217;s apostrophes&amp;#8201;&amp;#8212;&amp;#8201;and yes, even dashes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can add anchors.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Auto-generated Table Of Contents.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_markdown_to_asciidoc_conversion_guide&quot;&gt;Markdown-to-Asciidoc Conversion Guide&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_headings&quot;&gt;Headings&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Markdown:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;## Foo&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoc:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;== Foo&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_links&quot;&gt;Links&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Markdown:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;[This is Google](http://google.com)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoc:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;http://google.com[This is Google]
link:/relative-page[some relative page]&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Asciidoc feels more natural to me. My first instinct when inserting a link
is to insert the link itself. It&amp;#8217;s also nice to avoid the parens. Also, I often
will type a paragraph that has a few things that need to be linked after the
fact. It&amp;#8217;s really easy to paste the link just before the text in Asciidoc.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_images&quot;&gt;Images&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Markdown:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;![Mittens is my fave](/img/kitty1.jpg &quot;My Cat&quot;)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoc:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;image:/img/kitty1.jpg[My Cat]  Mittens is my fave] &quot;My Cat&quot;)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_comments&quot;&gt;Comments&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Markdown:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;&amp;lt;!-- just a comment --&amp;gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoc:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;// just a comment&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;or multi-line (yay!):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;////
a bunch
of comment
lines
////&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_code_fragments&quot;&gt;Code Fragments&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Markdown:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;    This is indented, yet subtle and easily mishandled when mixing with lists.&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoc (weird but easy enough):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;  ----
  This is left-aligned, or wherever you want. It is explicit.
  ----&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoc also supports Markdown-style indents, but I&amp;#8217;m finding that being
explicit is less susceptible to ambiguous translating.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_hrs&quot;&gt;HRs&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Markdown:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;  ----&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoc (weird but easy enough):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;  ''''&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_definition_lists&quot;&gt;Definition lists&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoc is much richer, and not significantly harder to learn.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Thu, 02 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-02-cryogen-on-freebsd-with-ansible.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-02-cryogen-on-freebsd-with-ansible.html
</link>
<title>
Cryogen Blog Setup
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The tech running this blog is described on the &lt;a href=&quot;/about.html&quot;&gt;About page&lt;/a&gt;. This
recipes explains what I did to set it all up.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_infrastructure&quot;&gt;Infrastructure&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can set up a static site easily enough with Github pages, but I think it’s
nice to manage a server yourself. You might want it for other things, and you
get to control it completely. Your learnings there will apply to any other
site/server you host.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can get yourself a “Droplet” at &lt;a href=&quot;http://digitalocean.com&quot;&gt;DigitalOcean&lt;/a&gt; for $5
USD per month. That’s cheap. It’s just a matter of a few clicks on their simple
control panel. I’m somewhat near San Francisco, so I chose that data center.
&lt;a href=&quot;/posts/2015-07-17-why-centos.html&quot;&gt;I like CentOS&lt;/a&gt; quite a bit as a server
OS, but I also like to play around with FreeBSD, so I chose that. It’s a recent
addition to the DO arsenal, and is a rock-solid OS with a fantastic security
record and a very famous file system: ZFS.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_deployment&quot;&gt;Deployment&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I’ve configured Ansible to push changes to the Droplet. Take a look at
&lt;a href=&quot;https://github.com/MicahElliott/blog/blob/master/provn/site.yaml&quot;&gt;the simple playbook&lt;/a&gt;.
I’d normally have set this up
&lt;a href=&quot;https://docs.ansible.com/playbooks_roles.html&quot;&gt;hierarchically with roles&lt;/a&gt;,
but this machine’s config is simple enough to fit in a single file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Any time I feel like deploying, I can simple run &lt;code&gt;deploy.zsh&lt;/code&gt; to fire the
&lt;code&gt;ansible-playbook&lt;/code&gt; command.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_git_versioning&quot;&gt;Git Versioning&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I like to commit often, but I don’t rely on git for updating the blog. I do
maintain the engine, styling, and text all in
&lt;a href=&quot;https://github.com/MicahElliott/blog&quot;&gt;a single repository&lt;/a&gt;. I usually commit when
a new post is added, and more frequently as it nears completion. Probably a good
idea to have a deploy cadence that’s in line with git-commits.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_cryogen&quot;&gt;Cryogen&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Although I’ve looked at Jekyll, Octopress, and several others over the years,
Cryogen is looking like a winner for a few reasons.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;minimal code base&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;one of the developers is the most prolific author of clojure web dev&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;they’re very responsive to issues&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it’s already got bootstrap, and is thus mobile-friendly&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;no engine to run on the server; just deploy the static &lt;code&gt;public/&lt;/code&gt; directory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it supports
&lt;a href=&quot;/posts/2015-07-02-stop-using-markdown.html&quot;&gt;Asciidoc, which is superior to Markdown&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it comes with a base theme that is easy to style; just tweak the existing
HTML template files that are in your project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Google Fonts are included. I really like
&lt;a href=&quot;https://chrome.google.com/webstore/detail/whatfont/jabopobgcpjmedljpbcaablpmlmfcogm?hl=en&quot;&gt;WhatFont
for Chrome&lt;/a&gt; for showing fonts. Try it here to see what I’ve chosen.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The documentation is small and great, and you can start running your blog
locally by following
&lt;a href=&quot;http://cryogenweb.org/docs/getting-started.html&quot;&gt;this tiny guide&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_things_you_can_add&quot;&gt;Things you can add&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Add feedburner as the RSS feed. This takes load off your server as you start
getting subscribers who may hit your feed frequently/automatically. You just
need to edit your &lt;code&gt;base.html&lt;/code&gt; to replace the feed link to point to your
feedburner XML.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Google Analytics is a simple way to see your site traffic. It’s a simple matter
of pasting a tiny javascript snippet in the bottom of your &lt;code&gt;base.html&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Videos can be embedded. You could use Youtube, but Vimeo might be better at not
pointing to random, odd videos as recommendations.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_things_that_are_not_needed&quot;&gt;Things that are not needed&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;tag clouds&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ads&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;wysiwyg editing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;user management&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a comment system (spam is insidious), but Disqus is an option&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;backups (they’re already in git)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;blogrolls&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;emailer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;categories&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;widgets for “like”ing or twitter updates&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Although I use CloudFlare elsewhere to protect from DDoS attacks (been hit
before) I don’t see much need for it for a blog. It could be added.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_things_that_may_be_coming_to_cryogen&quot;&gt;Things that may be coming to Cryogen&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/cryogen-project/cryogen/issues/65&quot;&gt;a &lt;em&gt;read more&lt;/em&gt; abstract mechanism&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/cryogen-project/cryogen/issues/67&quot;&gt;smarter recompilation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/cryogen-project/cryogen/issues/64&quot;&gt;jade markup support&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Thu, 02 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-02-01-livescript-vs-clojurescript-vs-racket.html
</guid>
<link>
http://micahelliott.com/posts/2015-02-01-livescript-vs-clojurescript-vs-racket.html
</link>
<title>
LiveScript vs ClojureScript
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The following are my pros/cons notes comparing LiveScript (which I really loved
using) to Clojure(Script), and eventually to Racket. The conclusion was that
ClojureScript wins, partly because of my other biases toward Clojure.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_ls&quot;&gt;LS&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_pros&quot;&gt;Pros&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;concise, haskell-like&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;improved coffee, a very popular language&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;npm&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;node is fast&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;beautifully simple standard node lib&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;brunch et al&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;jade (hiccup might suffice, but there is clj-jade)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;angular/backbone&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;express&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket.io&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;d3 (but c2)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;native json&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;many lessons/projects already written in ls&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;put into any proj that uses coffee&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;testing frameworks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;plugs into everything where js is used with minimal change&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_cons&quot;&gt;Cons&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;callback hell&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;impossible async recursion (and no tco)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;not multi-threaded so maybe harder to scale for production&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;poor repl&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;too many npm pkgs to choose from&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;won&amp;#8217;t paste into browser repl&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;bad vim syntax highlighting (fixable)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;node won&amp;#8217;t go on windows (anyone care?)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;prelude confused with underscore/lodash/async/nimble&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;obscure&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;syntax heavy; a bit quirky&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;surprising scope issues&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JavaScript\* community fragmented among langs/tools&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_clj_s&quot;&gt;CLJ(S)&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_pros_2&quot;&gt;Pros&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;lisp, beautiful functional&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a fit for every domain&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;immutability&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;avoids node event loop&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;multi-runtime options (java, node, browser)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;maybe preferred by academics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;clojureone&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;browser repl?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;native structures more expressive/concise than json and racket&amp;#8217;s&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;concurrency&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sensible scoping&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;easier to teach (vs ls), been done many times&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;laziness&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;macros&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;clojure toolbox (nicely settles on a few tools for any job)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;many settled libs: korma/sql, hiccup/templating, luminus/web, incanter/stats, midje/testing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;obviates ChucK with Overtone&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;lighttable as drracket competitor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;om/reagent/react&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;practical real-world, employable skillset&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;js compatible (ClojureScript)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;simple web deployment via uberjar/uberwar to jetty, tomcat, or nginx&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;4clojure for practice/competition&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;google closure compiler/optimizer (though heavy)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_cons_2&quot;&gt;Cons&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;lots of parens, more verbose&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;slow startup?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;memory hogging beast! so not good for kids learning on limited hw&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;prefers emacs (but PG uses vi)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;heavy on java and suffers from its limitations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RPN opaque for beginners&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;lacking JavaScript/node/npm ecosystem?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;terrible error messages, but &lt;a href=&quot;https://github.com/mmcgrana/clj-stacktrace&quot;&gt;clj-stacktrace&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_racket&quot;&gt;Racket&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_pros_3&quot;&gt;Pros&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;fast and light and easy to generate executables (for meager hardware)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nice, kid-friendly starter book (Realm of Racket), plus HtDP&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;actually is plt-scheme, so little schemer and sicp also apply&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;well accepted as academic/teaching language, with scheme history&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;many teaching resources, maybe even full course&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;well contained/organized documentation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;might want to build everything from scratch anyway, for teaching purposes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DrRacket&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nice repl(?)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;scribble documentation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/greghendershott/frog&quot;&gt;a scribble-based blog engine&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;friendly error messages&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;most flexible language (toolkit)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;accepts [] in place of ()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;language &quot;teach&quot; packs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;decent startup time: 230ms for hello.rkt, 46ms with just racket/base&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;no java to deal with&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;probably nice small install with racket-minimal from aur, excluding DrRacket&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pretty simple to move to clojure from racket, later on&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;probably does recursion right&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;true pattern matching(?)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nice unicode identifier support, even as symbols! use λ instead of lambda&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;raco (lein equivalent?)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;lang hosted on github&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;browsable package repo: &lt;a href=&quot;http://pkgs.racket-lang.org/&quot; class=&quot;bare&quot;&gt;http://pkgs.racket-lang.org/&lt;/a&gt; and &lt;a href=&quot;http://planet.racket-lang.org&quot; class=&quot;bare&quot;&gt;http://planet.racket-lang.org&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_cons_3&quot;&gt;Cons&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;syntax not as brief as Clojure&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;lacking ecosystem (web framework, templating, overtone, etc)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;no vim plugins like fireplace/vim-sexp?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;lacking libraries (mongo, etc)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;lacking syntax; everything is parens: harder to read (but &lt;code&gt;[]&lt;/code&gt; accepted)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;less powerful data structures&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;maybe not scalable? well, people claim it&amp;#8217;s faster than python&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;no good js transpiler story (whalesong?)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a little bulky to install at 400 MB (but sans-DrRacket pkg available&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;docs not as friendly as &lt;a href=&quot;http://clojuredocs.org/&quot; class=&quot;bare&quot;&gt;http://clojuredocs.org/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;? npm equivalent? maybe &lt;code&gt;raco planet&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_es6&quot;&gt;ES6&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_cons_4&quot;&gt;Cons&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;still just an ugly and verbose [braces and semicolons] syntax&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;will need transpilation for some time, so might as well use another lang&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_r&quot;&gt;R&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_pros_4&quot;&gt;Pros&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;vector oriented&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;libraries&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;graphing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;shiny&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fast and light&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fantastic repl and help system&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;math and data oriented&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fits math/stats curriculum&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;so many books/learning resources&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;industry standard&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;rstudio(?)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_cons_5&quot;&gt;Cons&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;not a lisp&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;syntax can be awkward and a bit ugly&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;not very web oriented(?)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;have to know stats to do much&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_but_what_do_they_want_to_build&quot;&gt;But what do they want to build?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;web apps&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;graphs/stats/analytics/reporting/journalism&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;parallel/fast improvements&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;games&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;robots&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;back-end service&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cars&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;automation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;system tools&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;interfaces&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;iot/devices (home automation)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;making music&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;language processing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;measuring instruments (farming, atmosphere, seismology, etc)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;or whatever, there are lots of jobs if that’s the end goal&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_requirements&quot;&gt;Requirements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;concise&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;functional&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;easy enough to learn&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;simple environment&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;minimal machine/$ resources&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;multi-domain&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;somewhat visual&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fun and not painful&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Sun, 01 Feb 2015 00:00:00 -0800
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-01-10-choosing-an-os.html
</guid>
<link>
http://micahelliott.com/posts/2015-01-10-choosing-an-os.html
</link>
<title>
Choosing your Everyday Operating System
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Three great operating systems are recommended for growing your programming
chops: Arch Linux, Gentoo Linux, and FreeBSD/PC-BSD. You&amp;#8217;re welcome to go with
a more mainstream UNIX like Ubuntu or OSX, but these have a tendency to hide
lower level OS details; you&amp;#8217;ll learn a lot more by choosing one of our
recommendations. Your preference for control, speed, licensing, and
mainstreamedness will determine your choice. All three are bleeding edge
rolling release, highly open, fast, minimalist, configurable via text files,
and security conscious. And all have uniquely fantastic package managers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_linux_or_bsd&quot;&gt;Linux or BSD?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;A wise person on some podcast I once heard said something like &amp;#8230;&amp;#8203;&lt;/div&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Linux is a PC OS ported to UNIX, BSD is a UNIX ported to the PC.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The first consideration is what license model appeals to you. Linux is
&lt;a href=&quot;http://en.wikipedia.org/wiki/GNU_General_Public_License&quot;&gt;GPL&lt;/a&gt; (v2), which
means that many of the tools you&amp;#8217;ll use are going to be GPL, and changes that
you make to code should be shared back with the community. BSD&amp;#8217;s stance on
licensing is that you can do whatever you want with changing of code. For some
business cases this may be a preferable model. You may not be augmenting your
system tools or kernel, but some day you very well may.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Linux is more popular than BSD, but that doesn&amp;#8217;t mean it&amp;#8217;s better. BSD powers
much of the internet today, including sites like Netflix and Yahoo. It&amp;#8217;s even
what&amp;#8217;s underneath OSX.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Linux has broader reach, particularly in mobile and embedded computing. It&amp;#8217;s
what powers your Android phone. It&amp;#8217;s in your router, and probably even in your
microwave. There are literally
&lt;a href=&quot;http://distrowatch.com/&quot;&gt;hundreds of distributions&lt;/a&gt; out there that you could
install on your laptop right now, many of which are in widespread use in data
centers and as desktops.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When you start up your shiny new service on an affordable VPS, most of your
options are going to be Linux based. Popular VPS hosting services include
Linode, DigitalOcean, and Rackspace, all of which primarily offer Linux (and
only Linux). There are BSD hosts out there, but the paucity is something to
keep in mind. If you have some idea of what OS you&amp;#8217;ll want to eventually host
your apps on, you probably want to choose that OS as what you&amp;#8217;ll run for your
home/development systems. IOW, if you decide to go with a Mac (or PC-BSD) for
your daily development, you may want to go with FreeBSD in the cloud.
Otherwise, choose a Linux family for both.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Linuxes nowadays are mostly based on systemd. This gives you sophisticated
control of running services, fancy journaling/logging, and super-fast booting.
BSDs have a simpler init startup system (but sometimes simple is a feature).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;More details on
&lt;a href=&quot;http://www.techrepublic.com/blog/10-things/10-differences-between-linux-and-bsd/&quot;&gt;this TechRepublic post&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_arch_linux&quot;&gt;Arch Linux&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The first Linux option is Arch. It is the most popular of our three and
features several niceties:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Fast installation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wikis and forums for any topic under the sun&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Binary packages for speed of install&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A lot of adoption momentum&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_gentoo_linux&quot;&gt;Gentoo Linux&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Gentoo is a DIY OS. You build everything yourself to suit the architectural
details of your system; you even configure and build your own kernel! It takes
some time to build/install a Gentoo, but the result and learning experience is
usually worth it. Compelling features:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;System is tuned to be fast!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ultimate control of every tool&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Portage/emerge&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_fedora_linux&quot;&gt;Fedora Linux&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The main advantage to using fedora is that it&amp;#8217;s in the RedHat family. The most
commonly deployed server OS these days is CentOS (also based on RedHat). Read
&lt;a href=&quot;posts/2015-07-17-why-centos.html&quot;&gt;why I like CentOS&lt;/a&gt; to see why I this is a
good choice.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_pc_bsd&quot;&gt;PC-BSD&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;FreeBSD is by far the most popular of the BSDs. The experience is pretty
similar to Gentoo, in that you can build most things yourself. It has some
very compelling features:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ZFS (compression, reliability, raid, speed, ease of use)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disk encryption&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DTrace&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All-in-one OS, maintaining the kernel and userland together&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reputation for robust security&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A PC-BSD super-distro with easy installation, making laptop and server
consistent&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Great, you can make a choice now! It won&amp;#8217;t be final, but it will get you on
your way with your first machine of many in your lucrative career.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Sat, 10 Jan 2015 00:00:00 -0800
</pubDate>
</item>
</channel>
</rss>
