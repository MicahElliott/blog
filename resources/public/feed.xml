<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0' xmlns:atom='http://www.w3.org/2005/Atom'>
<channel>
<atom:link href='http://micahelliott.com/' rel='self' type='application/rss+xml'/>
<generator>
clj-rss
</generator>
<title>
Micah Elliott
</title>
<link>
http://micahelliott.com/
</link>
<description>
A Tech Journal
</description>
<lastBuildDate>
Mon, 06 Jul 2015 20:06:46 -0700
</lastBuildDate>
<item>
<guid>
http://micahelliott.com/posts/2015-07-20-stackoverflow-motivation-engine.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-20-stackoverflow-motivation-engine.html
</link>
<title>
Stack Overflow’s Motivation Engine
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You’ve spent plenty of time on Stack Overflow. Google loves it. Several visits
per day? But unless you’re one who answers questions there, you’re probably not
aware of how they get so much participation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I’ve recently been answering questions on Stack Overflow. Well, I &lt;em&gt;had to&lt;/em&gt; in
order to be able to do things like upvoting. Aren’t we obligated to upvote when
someone has taken the time to teach us something valuable? And that was the
first hook. But it turns out that SO has a very sophisticated set of motivators
to keep you participating &amp;#8230;&amp;#8203; &lt;em&gt;frequently&lt;/em&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What first puzzled me was how so many other users there had such high
reputation. You might think that 1,000 points came from answering 1,000
questions. But it’s an elaborate point system. You feel yourself growing points
at a fairly rapid clip. It would sure be nice to have a &lt;em&gt;k&lt;/em&gt; (thousand) next to
your name!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_get_busy&quot;&gt;Get Busy!&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You eventually realize that you’re never going to be the first to answer a
question unless you’re tuned into a near real-time picture of what’s happening
with your tags of interest. The best way to earn points is to be the first to
answer and get your answer accepted. So you subscribe to be updated via email.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Every site requires another set of reputation. You’ll quickly find yourself
trying to answer questions on other Stack Exchange sites.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_way_more_than_badges&quot;&gt;Way More than Badges&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Sure, you earn badges. But you have to do more and more to earn the next type of
badge. You even have your “next badge” dangled from your profile. The badges
are more like &lt;em&gt;abilities&lt;/em&gt;. And there are three categories of them: bronze,
silver, and gold. It’s pretty challenging to get even a silver.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Each badge is documented. You know what you have to do to earn the
&lt;em&gt;archaeologist&lt;/em&gt; badge: edit some old posts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You’re given a pleasant surprise when they tell you that they’ve removed ads
since you’re such a great participant.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ultimately, people are on SO to prove their worth and get hired. So the&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_not_social&quot;&gt;Not Social&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It’s pretty interesting that there is no notion of “following”. You can’t even
“message” someone.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_gaming_it&quot;&gt;Gaming It&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I’m not going to bother trying to game this, because I don’t (think) I care too
much about my reputation points. But it can be done. I see people asking
questions that they shortly thereafter answer themselves.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I suppose you could also create a dummy account that spends a lot of its time
upvoting your real posts.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Mon, 20 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-17-why-centos.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-17-why-centos.html
</link>
<title>
CentOS vs the Rest
</title>
<description>

</description>
<pubDate>
Fri, 17 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-13-clojure-vim-setup.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-13-clojure-vim-setup.html
</link>
<title>
Clojure with Vim Setup
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;These are the steps I take to set up a new Arch system with a Clojure
environment for vim.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Get lein up to date&lt;/p&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;lein update&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install new version of clojure, eg, Arch: &lt;code&gt;yaourt -S clojure&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update lein search index: &lt;code&gt;lein search whatever&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set up fireplace, highlighting, mappings, sexp into &lt;code&gt;.vimrc&lt;/code&gt; with Vundle:&lt;/p&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;Bundle 'guns/vim-clojure-static.git'
Bundle 'guns/vim-clojure-highlight.git'
Bundle 'tpope/vim-leiningen.git'
Bundle 'tpope/vim-projectionist.git'
Bundle 'tpope/vim-dispatch.git'
Bundle 'tpope/vim-fireplace.git'
Bundle 'tpope/vim-sexp-mappings-for-regular-people'
Bundle 'guns/vim-sexp'
Bundle 'dgrnbrg/redl'&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add to &lt;code&gt;~/.lein/profiles.clj&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;{:user {:plugins [[lein-pprint &quot;1.1.1&quot;]
                  [cider/cider-nrepl &quot;0.7.0&quot;]]
        :dependencies [[slamhound &quot;1.3.1&quot;]
                       [org.thnetos/cd-client &quot;0.3.6&quot;]]}}&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create new project:&lt;/p&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;lein new foo&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add to each project:&lt;/p&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;:main foo.core
:repl-options {:init-ns foo.core})&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;lein deps&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start tmux? Maybe not; slime not working now anyway&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start &lt;code&gt;lein repl&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fire up vim&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run a repl in vim: &lt;code&gt;:Console&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start &lt;a href=&quot;https://github.com/dgrnbrg/vim-redl&quot;&gt;redl&lt;/a&gt; with &lt;code&gt;:ReplHere&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start drip (optional)&lt;/p&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;export LEIN_JAVA_CMD=drip  # could make lein hang on app template&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
<pubDate>
Mon, 13 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-09-i3-nuc-office-dashboard.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-09-i3-nuc-office-dashboard.html
</link>
<title>
Live Office Dashboard with i3 and a NUC
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this post I&amp;#8217;ll show you how to set up a live dashboard to display your
company (or house) metrics. It&amp;#8217;s as simple as writing a little i3 script to
rotate through a set of open browsers. You&amp;#8217;ll need to run X, i3, a fast
browser. The required hardware is a TV and a NUC.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
</description>
<pubDate>
Thu, 09 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-07-gists-as-blog.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-07-gists-as-blog.html
</link>
<title>
Using Gist As Your Blog
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Github&amp;#8217;s Gist is almost good enough as a blog. If you don&amp;#8217;t want to take the
time to set up your own blog, you could probably get away with using gists. As
an example, &lt;a href=&quot;https://gist.github.com/MicahElliott&quot;&gt;this&lt;/a&gt; is a pretty decent index
display.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;


&lt;!-- &lt;iframe src=&quot;https://player.vimeo.com/video/82339989&quot; width=&quot;500&quot; height=&quot;529&quot; frameborder=&quot;0&quot; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; --&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_where_it_shines&quot;&gt;Where it shines&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;nice comment system (&lt;a href=&quot;https://gist.github.com/MicahElliott/3048622&quot;&gt;example&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;markdown support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;auto-abstracts (shortened posts in index)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;built-in editor or use git&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;store associated files with your article in a real git repo&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nothing to host yourself&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_where_it_falls_short&quot;&gt;Where it falls short&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;no global feed&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;people don&amp;#8217;t expect it to serve as your blog&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;gets cluttered with other snippets&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;google will not index these well&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;no analytics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it seems unlikely that someone will like your post and decide to go explore your other gists&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Gists are great. Even if you set up a real blog, you&amp;#8217;ll still want to use gists to host code samples.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Tue, 07 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-05-docker-systemd-ansible.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-05-docker-systemd-ansible.html
</link>
<title>
Docker as a Full CentOS
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Docker has arrived. It&amp;#8217;s a &quot;container&quot; system for isolating services. It&amp;#8217;s
simpler and lighter than a VM, yet easier to use than a jail. But it&amp;#8217;s not
quite a full OS: it usually lacks things like systemd, cron, sshd, syslog, etc.
&lt;a href=&quot;http://phusion.github.io/baseimage-docker/&quot;&gt;Some folks are trying to address this for Ubuntu&lt;/a&gt;.
It turns out that this can also be done with CentOS 7! This all-in-one docker
instance becomes a great vehicle for testing deploys (and probably much more).&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ubuntu wasn&amp;#8217;t going to work for my needs, but I found
&lt;a href=&quot;https://github.com/maci0/docker-systemd-unpriv&quot;&gt;a minimal CentOS 7&lt;/a&gt;
version of the Ubuntu approach. So now Docker can actually be used for testing
deployments with almost real full OSs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_docker_with_centos_7&quot;&gt;Docker With CentOS 7&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;On your local host, stop docker if running (to reset IPs) and start up the
docker service:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;systemctl stop docker.service
systemctl start docker.service&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Maci has provided
&lt;a href=&quot;http://maci0.wordpress.com/2014/07/23/run-systemd-in-an-unprivileged-docker-container/&quot;&gt;an article&lt;/a&gt;
and repo to get centos7 working with docker, which this article extends.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Get it (one time ever):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;git clone https://github.com/maci0/docker-systemd-unpriv
cd docker-systemd-unpriv&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Build (one time ever):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;alias dk=docker  # put in ~/.zshrc
dk build --rm -t maci/systemd .&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Fire up an instance any time, setting hostname etc:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;dk run -h dk2 --rm -t -i -p 2222:22 -v /sys/fs/cgroup:/sys/fs/cgroup:ro maci/systemd /usr/lib/systemd/systemd&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Switch to other term.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;See the IP:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;dk ps
dk inspect 097241cd8024 |grep IPAddress&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Test login:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;sshpass -p root ssh dk2
# Oops. Wipe existing/offending key.
sed -i '47d' ~/.ssh/known_hosts
sshpass -p root ssh dk2&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Run ansible toward it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;ansible-playbook -u root -l offsvrs:172.17.0.2 -k site.yml -v&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Watch progress:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;journalctl -xaf&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Shut down instance:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;dk ps
...
dk stop ea970de7e735&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Save the image:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;dk save -o centos7-systemd-maci.img.tar maci/systemd:latest
gzip centos7-systemd-maci.img.tar&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Archive it to S3:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;s3.sh put centos7-systemd-maci.img.tar.gz s3://dockers.example.com&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_helpers&quot;&gt;Helpers&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Generate hashed password:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;python2 -c &quot;from passlib.hash import sha512_crypt; import getpass; print sha512_crypt.encrypt(getpass.getpass())&quot;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Script to quickly remove a key, &lt;code&gt;~/bin/sshrmkey&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;#! /usr/bin/env zsh
# sshrmkey — delete a line containing stale/offending key
line=${1?Must provide offending line}
sed -i &quot;${line}d&quot; ~/.ssh/known_hosts&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;% sshrmkey 42&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_vagrant_virtualbox&quot;&gt;Vagrant/Virtualbox&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you really want to avoid Docker but still test your deploy on CentOS 7, you
can accomplish much of the same setup with Vagrant.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Install:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;y -S vagrant&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Set up kernel: &lt;a href=&quot;http://unix.stackexchange.com/questions/131792/&quot; class=&quot;bare&quot;&gt;http://unix.stackexchange.com/questions/131792/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;sudo depmod [3.19.2-1-ARCH]
sudo modprobe vboxdrv&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Choose work area:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;md ~/exp/vagrant/t1&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Find a box: &lt;a href=&quot;http://www.vagrantbox.es/&quot; class=&quot;bare&quot;&gt;http://www.vagrantbox.es/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;vagrant init hashicorp/precise32 # OR
vagrant init https://f0fff3908f081cb6461b407be80daf97f07ac418.googledrive.com/host/0BwtuV7VyVTSkUG1PM3pCeDJ4dVE/centos7.box
[vagrant up]??&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Log in:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;vagrant ssh&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Better:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;sshpass -p vagrant ssh -p 2200 vagrant@127.0.0.1&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Consult: &lt;a href=&quot;http://docs.ansible.com/guide_vagrant.html&quot; class=&quot;bare&quot;&gt;http://docs.ansible.com/guide_vagrant.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Add to generated &lt;code&gt;Vagrantfile&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;config.vm.provision &quot;ansible&quot; do |ans|
  ans.playbook = &quot;playbook.yaml&quot;
end&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Start it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;vagrant up&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Create hosts file:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;&amp;gt;hosts
[foos]
127.0.0.1:2200&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Create a playbook.yaml:&lt;/p&gt;
&lt;/div&gt;
- hosts: foos
  tasks:
    - name: install zsh
      yum: name=zsh state=present
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Run ansible:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;ansible-playbook -i ./hosts -u vagrant playbook.yml -ksK&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Sun, 05 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-05-interesting-major-vulnerabilities.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-05-interesting-major-vulnerabilities.html
</link>
<title>
Interesting Modern Vulnerabilities
</title>
<description>
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_heartbleed&quot;&gt;Heartbleed&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_ghost&quot;&gt;GHOST&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_poodle&quot;&gt;POODLE&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_shellshock&quot;&gt;ShellShock&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Sun, 05 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-05-networking-tools.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-05-networking-tools.html
</link>
<title>
Networking Tools
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ansible snippets to install these.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;code&gt;iperf3&lt;/code&gt; is a great tool for testing transfer speed. With its help, I was able to convince a network engineer at our data center that there was an issue. She eventually got our rate up to nearly 1 Gbps across remote centers.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;admonitionblock tip&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Tip&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
use iperf.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Some Tools&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;# a comment
iperf3&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;    netstat -tulpn

netcat

sudo traceroute

mtr

nethogs

iftop

nmon&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Sun, 05 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-02-stop-using-markdown.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-02-stop-using-markdown.html
</link>
<title>
From Markdown to Asciidoc
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Markdown has become the de facto standard for plain text syntax. It&amp;#8217;s supported
in the webform editors of Stack Overflow, Github, and many blogs, wikis, and
forums. It’s built into most static site generators. You can even use it to
write a book. It&amp;#8217;s fantastic that it has raised awareness of text-based markup,
but it’s not enough.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoc fills in many of the shortcomings of Markdown. Here&amp;#8217;s a
&lt;a href=&quot;http://powerman.name/doc/asciidoc&quot;&gt;cheat-sheet&lt;/a&gt; to give you a feel for its
syntax. It&amp;#8217;s almost as simple as Markdown, and thus quick to learn.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_markdown_shortcomings&quot;&gt;Markdown Shortcomings&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You’re probably aware of most of these, but maybe don’t notice the pain as much
as you should.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Comments are clumsy. And multi-line becomes a mess.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Vim ends up loading its HTML syntax which clutters functionality and causes confusion.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;No good way to add extra markup without dropping into HTML.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;No tables, citations, footnotes, or sub-/super-scripting.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Inferior to Asciidoc&amp;#8217;s Docbook toolchain.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_asciidoc_extras_and_general_niceties&quot;&gt;Asciidoc Extras and General Niceties&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Consistency of section delimiters. All are four characters and delineate blocks:
line-wise pairs of quadruples &lt;code&gt;-&lt;/code&gt; (code), &lt;code&gt;_&lt;/code&gt; (quote), &lt;code&gt;/&lt;/code&gt; (comment), &lt;code&gt;=&lt;/code&gt;
(caption), &lt;code&gt;+&lt;/code&gt; (pass-through HTML).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Titles can be added to most sections.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Auto-up-converting of some punctuation, like the pedant&amp;#8217;s apostrophes&amp;#8201;&amp;#8212;&amp;#8201;and yes, even dashes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can add anchors.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Auto-generated Table Of Contents.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_markdown_to_asciidoc_conversion_guide&quot;&gt;Markdown-to-Asciidoc Conversion Guide&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_headings&quot;&gt;Headings&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Markdown:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;## Foo&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoc:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;== Foo&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_links&quot;&gt;Links&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Markdown:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;[This is Google](http://google.com)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoc:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;http://google.com[This is Google]
link:/relative-page[some relative page]&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Asciidoc feels more natural to me. My first instinct when inserting a link
is to insert the link itself. It&amp;#8217;s also nice to avoid the parens. Also, I often
will type a paragraph that has a few things that need to be linked after the
fact. It&amp;#8217;s really easy to paste the link just before the text in Asciidoc.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_images&quot;&gt;Images&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Markdown:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;![Mittens is my fave](/img/kitty1.jpg &quot;My Cat&quot;)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoc:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;image:/img/kitty1.jpg[My Cat]  Mittens is my fave] &quot;My Cat&quot;)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_comments&quot;&gt;Comments&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Markdown:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;&amp;lt;!-- just a comment --&amp;gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoc:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;// just a comment&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;or multi-line (yay!):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;////
a bunch
of comment
lines
////&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_code_fragments&quot;&gt;Code Fragments&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Markdown:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;    This is indented, yet subtle and easily mishandled when mixing with lists.&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoc (weird but easy enough):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;  ----
  This is left-aligned, or wherever you want. It is explicit.
  ----&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoc also supports Markdown-style indents, but I&amp;#8217;m finding that being
explicit is less susceptible to ambiguous translating.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_hrs&quot;&gt;HRs&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Markdown:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;  ----&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoc (weird but easy enough):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;  ''''&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_definition_lists&quot;&gt;Definition lists&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoc is much richer, and not significantly harder to learn.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Thu, 02 Jul 2015 00:00:00 -0700
</pubDate>
</item>
<item>
<guid>
http://micahelliott.com/posts/2015-07-02-cryogen-on-freebsd-with-ansible.html
</guid>
<link>
http://micahelliott.com/posts/2015-07-02-cryogen-on-freebsd-with-ansible.html
</link>
<title>
Cryogen Blog Setup
</title>
<description>
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The tech running this blog is described on the &lt;a href=&quot;/about.html&quot;&gt;About page&lt;/a&gt;. This
recipes explains what I did to set it all up.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_infrastructure&quot;&gt;Infrastructure&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can set up a static site easily enough with Github pages, but I think it’s
nice to manage a server yourself. You might want it for other things, and you
get to control it completely. Your learnings there will apply to any other
site/server you host.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can get yourself a “Droplet” at &lt;a href=&quot;http://digitalocean.com&quot;&gt;DigitalOcean&lt;/a&gt; for $5
USD per month. That’s cheap. It’s just a matter of a few clicks on their simple
control panel. I’m somewhat near San Francisco, so I chose that data center.
&lt;a href=&quot;/posts/2015-07-17-why-centos.html&quot;&gt;I like CentOS&lt;/a&gt; quite a bit as a server
OS, but I also like to play around with FreeBSD, so I chose that. It’s a recent
addition to the DO arsenal, and is a rock-solid OS with a fantastic security
record and a very famous file system: ZFS.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_deployment&quot;&gt;Deployment&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I’ve configured Ansible to push changes to the Droplet. Take a look at
&lt;a href=&quot;https://github.com/MicahElliott/blog/blob/master/provn/site.yaml&quot;&gt;the simple playbook&lt;/a&gt;.
I’d normally have set this up
&lt;a href=&quot;https://docs.ansible.com/playbooks_roles.html&quot;&gt;hierarchically with roles&lt;/a&gt;,
but this machine’s config is simple enough to fit in a single file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Any time I feel like deploying, I can simple run &lt;code&gt;deploy.zsh&lt;/code&gt; to fire the
&lt;code&gt;ansible-playbook&lt;/code&gt; command.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_git_versioning&quot;&gt;Git Versioning&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I like to commit often, but I don’t rely on git for updating the blog. I do
maintain the engine, styling, and text all in
&lt;a href=&quot;https://github.com/MicahElliott/blog&quot;&gt;a single repository&lt;/a&gt;. I usually commit when
a new post is added, and more frequently as it nears completion. Probably a good
idea to have a deploy cadence that’s in line with git-commits.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_cryogen&quot;&gt;Cryogen&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Although I’ve looked at Jekyll, Octopress, and several others over the years,
Cryogen is looking like a winner for a few reasons.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;minimal code base&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;one of the developers is the most prolific author of clojure web dev&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;they’re very responsive to issues&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it’s already got bootstrap, and is thus mobile-friendly&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;no engine to run on the server; just deploy the static &lt;code&gt;public/&lt;/code&gt; directory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it supports
&lt;a href=&quot;/posts/2015-07-02-stop-using-markdown.html&quot;&gt;Asciidoc, which is superior to Markdown&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it comes with a base theme that is easy to style; just tweak the existing
HTML template files that are in your project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Google Fonts are included. I really like
&lt;a href=&quot;https://chrome.google.com/webstore/detail/whatfont/jabopobgcpjmedljpbcaablpmlmfcogm?hl=en&quot;&gt;WhatFont
for Chrome&lt;/a&gt; for showing fonts. Try it here to see what I’ve chosen.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The documentation is small and great, and you can start running your blog
locally by following
&lt;a href=&quot;http://cryogenweb.org/docs/getting-started.html&quot;&gt;this tiny guide&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_things_you_can_add&quot;&gt;Things you can add&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Add feedburner as the RSS feed. This takes load off your server as you start
getting subscribers who may hit your feed frequently/automatically. You just
need to edit your &lt;code&gt;base.html&lt;/code&gt; to replace the feed link to point to your
feedburner XML.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Google Analytics is a simple way to see your site traffic. It’s a simple matter
of pasting a tiny javascript snippet in the bottom of your &lt;code&gt;base.html&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Videos can be embedded. You could use Youtube, but Vimeo might be better at not
pointing to random, odd videos as recommendations.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_things_that_are_not_needed&quot;&gt;Things that are not needed&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;tag clouds&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ads&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;wysiwyg editing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;user management&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a comment system (spam is insidious), but Disqus is an option&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;backups (they’re already in git)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;blogrolls&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;emailer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;categories&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;widgets for “like”ing or twitter updates&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Although I use CloudFlare elsewhere to protect from DDoS attacks (been hit
before) I don’t see much need for it for a blog. It could be added.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_things_that_may_be_coming_to_cryogen&quot;&gt;Things that may be coming to Cryogen&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;a &lt;em&gt;read more&lt;/em&gt; abstract mechanism&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;smarter recompilation&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>
Thu, 02 Jul 2015 00:00:00 -0700
</pubDate>
</item>
</channel>
</rss>
