{:title "DrRacket Shortcomings"
 :layout :post
 :tags  ["draft"]
 :toc false
}

Why point-and-click?

++++
<!-- more -->
++++

* paredit/sexp
* rainbow parens
* vi movement
* syntax/highlighting control
* light-weight
* easy entry of lambda/define (plus conceal)
* graduation path

DrRacket tries to make programming easier than with Scratch. But Racket is such
a huge step up in complexity that it doesn’t get you to a gentler place more
than Vim/Emacs gives.


== Emacs Shortcomings

* relies on arrow keys
* key chords
* heavy (more memory, slower)
* steeper learning curve
* I don’t know emacs
* constant reaching for `alt`
* too much to teach emacs with vim mode together
  http://stackoverflow.com/questions/14291260/difference-between-viper-vimpulse-and-evil-for-emacs

.Emacs still compelling
* So many lisp users
* elisp
* powerful lisp modes (paredit, cider)
